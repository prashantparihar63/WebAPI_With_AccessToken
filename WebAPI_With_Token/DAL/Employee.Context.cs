//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAPI_With_Token.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SampleEntities : DbContext
    {
        public SampleEntities()
            : base("name=SampleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            //throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
    
        public virtual ObjectResult<sp_GetEmployee_Result> sp_GetEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmployee_Result>("sp_GetEmployee");
        }
    
        public virtual ObjectResult<sp_GetEmployeeById_Result> sp_GetEmployeeById(Nullable<decimal> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmployeeById_Result>("sp_GetEmployeeById", idParameter);
        }
    
        public virtual ObjectResult<sp_GetEmployee_for_datatable_Result> sp_GetEmployee_for_datatable(string searchValue, Nullable<int> firstRow, Nullable<int> lastRow, string sortColumn, string sortOrder)
        {
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var firstRowParameter = firstRow.HasValue ?
                new ObjectParameter("FirstRow", firstRow) :
                new ObjectParameter("FirstRow", typeof(int));
    
            var lastRowParameter = lastRow.HasValue ?
                new ObjectParameter("LastRow", lastRow) :
                new ObjectParameter("LastRow", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmployee_for_datatable_Result>("sp_GetEmployee_for_datatable", searchValueParameter, firstRowParameter, lastRowParameter, sortColumnParameter, sortOrderParameter);
        }
    }
}
